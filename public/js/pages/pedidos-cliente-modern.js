/**
 * Pedidos Cliente Manager - JavaScript Moderno
 * Versión: 2.0 - Optimizado y minificado
 * PWA Compatible
 */

class PedidosClienteManager{constructor(){this.modals={};this.toastCount=0;this.init()}init(){this.initEventListeners();this.animateCards();this.checkPWAStatus()}initEventListeners(){document.addEventListener('click',e=>{if(e.target.closest('[data-action="view-order"]')){e.preventDefault();const btn=e.target.closest('[data-action="view-order"]');const orderId=btn.dataset.orderId;this.viewOrder(orderId)}else if(e.target.closest('[data-action="cancel-order"]')){e.preventDefault();const btn=e.target.closest('[data-action="cancel-order"]');const orderId=btn.dataset.orderId;this.showCancelModal(orderId)}else if(e.target.closest('[data-action="repeat-order"]')){e.preventDefault();const btn=e.target.closest('[data-action="repeat-order"]');const orderId=btn.dataset.orderId;this.repeatOrder(orderId)}else if(e.target.closest('[data-action="filter"]')){e.preventDefault();this.applyFilters()}else if(e.target.closest('[data-action="clear-filters"]')){e.preventDefault();this.clearFilters()}});document.querySelectorAll('[data-close-modal]').forEach(btn=>{btn.addEventListener('click',()=>{const modalId=btn.dataset.closeModal;this.closeModal(modalId)})});document.addEventListener('keydown',e=>{if(e.key==='Escape'){this.closeAllModals()}})}animateCards(){const cards=document.querySelectorAll('.pedido-card, .pedido-stat-card');cards.forEach((card,index)=>{setTimeout(()=>{card.classList.add('fade-in-up')},index*100)})}viewOrder(orderId){this.showLoading();window.location.href=`/cliente/pedidos/${orderId}`}showCancelModal(orderId){const modal=this.createModal({id:'cancel-order-modal',type:'danger',icon:'⚠️',title:'¿Cancelar pedido?',body:`<p>¿Estás seguro de que deseas cancelar este pedido?</p><p class="text-muted small mb-0">Esta acción no se puede deshacer.</p>`,footer:`
                <button class="pedido-modal-btn pedido-modal-btn-secondary" data-close-modal="cancel-order-modal">
                    <i class="bi bi-x-circle"></i> No, mantener
                </button>
                <button class="pedido-modal-btn pedido-modal-btn-danger" onclick="pedidosManager.confirmCancel('${orderId}')">
                    <i class="bi bi-check-circle"></i> Sí, cancelar
                </button>
            `});this.showModal('cancel-order-modal')}confirmCancel(orderId){this.closeModal('cancel-order-modal');this.showLoading();fetch(`/cliente/pedidos/${orderId}/cancelar`,{method:'POST',headers:{'Content-Type':'application/json','X-CSRF-TOKEN':document.querySelector('meta[name="csrf-token"]').content},body:JSON.stringify({motivo:'Cancelado por el cliente'})}).then(res=>res.json()).then(data=>{this.hideLoading();if(data.success){this.showToast('success','Pedido cancelado','El pedido ha sido cancelado exitosamente');setTimeout(()=>location.reload(),1500)}else{this.showToast('error','Error',data.message||'No se pudo cancelar el pedido')}}).catch(err=>{this.hideLoading();console.error('Error:',err);this.showToast('error','Error','Ocurrió un error al cancelar el pedido')})}repeatOrder(orderId){this.showLoading();fetch(`/cliente/pedidos/${orderId}`).then(res=>res.json()).then(data=>{this.hideLoading();if(data.pedido&&data.pedido.detalles){const products=data.pedido.detalles.map(d=>({id:d.producto_id,cantidad:d.cantidad}));this.addToCart(products)}else{this.showToast('error','Error','No se pudo repetir el pedido')}}).catch(err=>{this.hideLoading();console.error('Error:',err);this.showToast('error','Error','Ocurrió un error al repetir el pedido')})}addToCart(products){this.showLoading();fetch('/cliente/carrito/agregar-multiple',{method:'POST',headers:{'Content-Type':'application/json','X-CSRF-TOKEN':document.querySelector('meta[name="csrf-token"]').content},body:JSON.stringify({productos:products})}).then(res=>res.json()).then(data=>{this.hideLoading();if(data.success){this.showToast('success','Productos agregados','Los productos han sido agregados al carrito');setTimeout(()=>window.location.href='/cliente/carrito',1500)}else{this.showToast('error','Error',data.message||'No se pudieron agregar los productos')}}).catch(err=>{this.hideLoading();console.error('Error:',err);this.showToast('error','Error','Ocurrió un error al agregar los productos')})}applyFilters(){const estado=document.getElementById('filter-estado')?.value||'';const fecha=document.getElementById('filter-fecha')?.value||'';const busqueda=document.getElementById('filter-busqueda')?.value||'';const url=new URL(window.location.href);if(estado)url.searchParams.set('estado',estado);else url.searchParams.delete('estado');if(fecha)url.searchParams.set('fecha',fecha);else url.searchParams.delete('fecha');if(busqueda)url.searchParams.set('busqueda',busqueda);else url.searchParams.delete('busqueda');this.showLoading();window.location.href=url.toString()}clearFilters(){const url=new URL(window.location.href);url.searchParams.delete('estado');url.searchParams.delete('fecha');url.searchParams.delete('busqueda');this.showLoading();window.location.href=url.toString()}createModal({id,type='primary',icon='ℹ️',title,body,footer}){if(this.modals[id])return this.modals[id];const backdrop=document.createElement('div');backdrop.className='pedido-modal-backdrop';backdrop.id=`${id}-backdrop`;backdrop.addEventListener('click',()=>this.closeModal(id));const modal=document.createElement('div');modal.className='pedido-modal';modal.id=id;modal.innerHTML=`
            <div class="pedido-modal-content">
                <div class="pedido-modal-header">
                    <div class="pedido-modal-title">
                        <div class="pedido-modal-icon pedido-modal-icon-${type}">${icon}</div>
                        <span>${title}</span>
                    </div>
                    <button class="pedido-modal-close" data-close-modal="${id}">
                        <i class="bi bi-x-lg"></i>
                    </button>
                </div>
                <div class="pedido-modal-body">${body}</div>
                ${footer?`<div class="pedido-modal-footer">${footer}</div>`:''}
            </div>
        `;document.body.appendChild(backdrop);document.body.appendChild(modal);modal.querySelector('[data-close-modal]').addEventListener('click',()=>this.closeModal(id));this.modals[id]={backdrop,modal};return this.modals[id]}showModal(id){const modalObj=this.modals[id];if(!modalObj)return;requestAnimationFrame(()=>{modalObj.backdrop.classList.add('active');modalObj.modal.classList.add('active');document.body.style.overflow='hidden'})}closeModal(id){const modalObj=this.modals[id];if(!modalObj)return;modalObj.backdrop.classList.remove('active');modalObj.modal.classList.remove('active');document.body.style.overflow='';setTimeout(()=>{modalObj.backdrop.remove();modalObj.modal.remove();delete this.modals[id]},300)}closeAllModals(){Object.keys(this.modals).forEach(id=>this.closeModal(id))}showToast(type,title,message){const toastId=`toast-${++this.toastCount}`;let container=document.querySelector('.toast-container');if(!container){container=document.createElement('div');container.className='toast-container';document.body.appendChild(container)}const iconMap={success:'✓',error:'✕',warning:'⚠',info:'ℹ'};const toast=document.createElement('div');toast.className=`toast toast-${type}`;toast.id=toastId;toast.innerHTML=`
            <div class="toast-icon">${iconMap[type]||'ℹ'}</div>
            <div class="toast-content">
                <div class="toast-title">${title}</div>
                <div class="toast-message">${message}</div>
            </div>
            <button class="toast-close" onclick="pedidosManager.closeToast('${toastId}')">
                <i class="bi bi-x-lg"></i>
            </button>
        `;container.appendChild(toast);requestAnimationFrame(()=>toast.classList.add('show'));setTimeout(()=>this.closeToast(toastId),5000)}closeToast(id){const toast=document.getElementById(id);if(!toast)return;toast.classList.remove('show');setTimeout(()=>toast.remove(),300)}showLoading(){let overlay=document.querySelector('.loading-overlay');if(!overlay){overlay=document.createElement('div');overlay.className='loading-overlay';overlay.innerHTML=`
                <div class="loading-spinner"></div>
                <div class="loading-text">Cargando...</div>
            `;document.body.appendChild(overlay)}overlay.classList.add('active')}hideLoading(){const overlay=document.querySelector('.loading-overlay');if(overlay){overlay.classList.remove('active');setTimeout(()=>overlay.remove(),300)}}checkPWAStatus(){if('serviceWorker'in navigator){navigator.serviceWorker.getRegistration().then(registration=>{if(registration){console.log('PWA activo - Service Worker registrado')}})}}formatCurrency(amount){return new Intl.NumberFormat('es-CO',{style:'currency',currency:'COP',minimumFractionDigits:0}).format(amount)}formatDate(date){return new Intl.DateTimeFormat('es-CO',{year:'numeric',month:'long',day:'numeric',hour:'2-digit',minute:'2-digit'}).format(new Date(date))}}

const pedidosManager=new PedidosClienteManager();window.pedidosManager=pedidosManager;
